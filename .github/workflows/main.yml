name: CI/CD Calculatrice

on:
  push:
    branches: [ main ] # Déclenche le workflow lors d'un push sur la branche main
  pull_request:
    branches: [ main ] # Déclenche le workflow lors d'une pull request sur la branche main

jobs:
  build:
    runs-on: ubuntu-latest # Utilise une machine virtuelle Ubuntu pour l'exécution

    steps:
      - uses: actions/checkout@v3 # Récupère le code du dépôt

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 # Configure Python 3.9

      - name: Install dependencies
        run: pip install -r requirements.txt # Installe les dépendances (voir point 4)

      - name: Run tests (exemple)
        run: |
          python -c "assert 1 + 1 == 2" # Un test simple (à remplacer par vos tests unitaires)
          python -c "import math; assert math.sqrt(4) == 2"

      - name: Deploy (exemple - serveur Python simple)
        if: github.ref == 'refs/heads/main' # Déploie seulement sur les push sur la branche main
        run: |
          nohup python app.py > output.log 2>&1 & # Lance l'app en arrière-plan (non recommandé pour la production)
          echo "Application déployée (sur le port 5000 - pour la démo)"

  # Exemple d'un job pour arrêter le serveur (à adapter selon votre déploiement)
  stop_server:
    needs: build # Ce job dépend du job 'build'
    if: github.ref == 'refs/heads/main' && always()
    runs-on: ubuntu-latest
    steps:
      - name: Stop server
        run: pkill python # Tue tous les processus python (attention en prod)
        continue-on-error: true # Permet de continuer même s'il n'y a pas de processus à tuer